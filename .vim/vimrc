" ============== vim-go ============== "
filetype plugin indent on

" Allow backspace to delete indentation and inserted text
" i.e. how it works in most programs
" indent  allow backspacing over autoindent
" eol     allow backspacing over line breaks (join lines)
" start   allow backspacing over the start of insert; CTRL-W and CTRL-U
"        stop once at the start of insert.
set backspace=indent,eol,start

" go-vim plugin specific commands
" Also run `goimports` on your current file on every save
" Might be be slow on large codebases, if so, just comment it out
let g:go_fmt_command = "goimports"
let g:go_auto_type_info = 1  " Automatically get signature/type info for object under cursor
let g:go_highlight_types = 1  " beautify highlight 'type'
let g:go_highlight_functions = 1  " highlight my function and method
let g:go_highlight_function_calls = 1  " highlight function and method invocations
let g:go_highlight_operators = 1  " highlight operators

" Autocomplete prompt to appear automatically when press .(dot)
"au filetype go inoremap <buffer> . .<C-x><C-o>


" ============== Rainbow brackets Configuration ============== "
let g:rainbow_active = 1 " Enable
let g:rainbow_load_separately = [
    \ [ '*' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
    \ [ '*.tex' , [['(', ')'], ['\[', '\]']]  ],
    \ [ '*.cpp' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
    \ [ '*.{html,htm}' , [['(', ')'], ['\[', '\]'], ['{', '}'], ['<\a[^>]*>', '</[^>]*>']]  ],
    \ ]
let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3', 'DarkOrchid3', 'FireBrick'] " determine the colors
let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'red', 'magenta']


" ============== Git Gutter ============== "
highlight GitGutterAdd guifg=#009900 ctermfg=Green
highlight GitGutterChange guifg=#bbbb00 ctermfg=Yellow
highlight GitGutterDelete guifg=#ff2222 ctermfg=Red
let g:gitgutter_enabled = 1

" ============== Normal setting ============== "
set number relativenumber  " turn hybrid line number on
set showcmd "show command in bottom bar
set tabstop=4   " number of visual spaces per TAB
set expandtab   "tabs are spaces
set cursorline  "highlight current line
set wildmenu   "visual autocomplete for command menu
set lazyredraw  "redraw only when we need to
set showmatch  "highlight matching [{()}]
set autowrite
" Change how vim represents characters on the screen
set encoding=utf-8

" Set the encoding of files written
set fileencoding=utf-8


" ============== New movement keymap ============== "
inoremap hh <ESC>
noremap ; l
noremap l k
noremap k j
noremap j h

" ============== Terminal ============== "
set splitbelow

" ============== Skin ============== "
syntax enable
set background=dark
colorscheme gruvbox

" ================ Search ================= "
set incsearch  " Highlight as you search
set hlsearch   " Highlight the current search
set ignorecase " Make search case insensitive...
set smartcase  " ... except when we use uppercase letters

" Search down into subdirectories
" Provides tab-completion for all file-related tasks
set path+=**

" ================ WSL yank support  ================= "
let s:clip = '/mnt/c/Windows/System32/clip.exe'  " change this path according to your mount point
if executable(s:clip)
    augroup WSLYank
        autocmd!
        autocmd TextYankPost * if v:event.operator ==# 'y' | call system('cat |' . s:clip, @0) | endif
    augroup END
endif
set clipboard=unnamedplus  " Copy to clipboard "+y


" ================ Netrw magic  ================= "
let g:netrw_banner = 0 "hide netrw top banner
let g:netrw_list_hide = '.*\.swap$'  " Hide vim.swp files
let g:netrw_liststyle = 3  " Change the directory view in netrw
let g:netrw_browse_split = 4 " Open on previous vim
let g:netrw_altv = 1
let g:netrw_winsize = 25 " size of left window

" ========== Open Vexplor automatically  ========== "
augroup ProjectDrawer
  autocmd!
  autocmd VimEnter * :Vexplore
augroup END



" ==================== Buffers  ===================== "
" Per default, netrw leaves unmodified buffers open. This autocommand
" deletes netrw's buffer once it's hidden (using ':q', for example)
autocmd FileType netrw setl bufhidden=delete
" --------- Remapping key ------- "
 map <F8> :bprevious<CR>
 map <F9> :bnext<CR>
